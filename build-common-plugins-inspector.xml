<?xml version="1.0"?>
<!DOCTYPE project>

<project name="build-common-plugins-inspector.xml">
	<macrodef name="record-fail">
		<attribute name="message" />

		<sequential>
			<if>
				<equals arg1="${basedir.name}" arg2="test-broken" />
				<then>
					<echo append="true" file="../plugins-inspector.log">@{message}</echo>
				</then>
				<else>
					<fail>@{message}</fail>
				</else>
			</if>
		</sequential>
	</macrodef>

	<target name="inspect-plugins">
		<delete file="../plugins-inspector.log" />

		<checksum file="build.xml" property="build.xml.checksum" />

		<if>
			<not>
				<equals arg1="${build.xml.checksum}" arg2="aa45183ecb2cda43d255c7070a6225de" />
			</not>
			<then>
				<record-fail message="build.xml is nonstandard." />
			</then>
		</if>

		<for param="module.name">
			<path>
				<dirset dir="." includes="*" />
			</path>
			<sequential>
			</sequential>
		</for>

		<if>
			<equals arg1="${basedir.name}" arg2="test-broken" />
			<then>
				<checksum file="../plugins-inspector.log" property="plugins-inspector.log.checksum" />

				<if>
					<not>
						<equals arg1="${plugins-inspector.log.checksum}" arg2="6fc1f47ae6b8108699b044550eb5e64b" />
					</not>
					<then>
						<fail>Plugins inspector is not detecting all errors.</fail>
					</then>
				</if>
			</then>
			<elseif>
				<equals arg1="${basedir.name}" arg2="test-working" />
				<then>
					<if>
						<available file="../plugins-inspector.log" />
						<then>
							<fail>Plugins inspector is not detecting false errors.</fail>
						</then>
					</if>
				</then>
			</elseif>
		</if>

		<delete file="../plugins-inspector.log" />

		<!--<exec dir="." executable="git">
			<arg line="clean -d -f -x ." />
		</exec>

		<for param="module.name">
			<path>
				<dirset dir="." includes="*" />
			</path>
			<sequential>
				<if>
					<and>
						<available file="@{module.name}/docroot" />
						<available file="@{module.name}/src" />
					</and>
					<then>
						<fail>Module @{module.name} must not have both a "docroot" and a "src" directory.</fail>
					</then>
				</if>

				<if>
					<and>
						<not>
							<available file="@{module.name}/docroot" />
						</not>
						<not>
							<available file="@{module.name}/src" />
						</not>
					</and>
					<then>
						<fail>Module @{module.name} must have a "docroot" or a "src" directory.</fail>
					</then>
				</if>

				<if>
					<available file="@{module.name}/docroot/WEB-INF/liferay-hook.xml" />
					<then>
						<if>
							<and>
								<resourcecontains resource="@{module.name}/docroot/WEB-INF/liferay-hook.xml" substring="&lt;language-properties&gt;" />
								<not>
									<resourcecontains resource="@{module.name}/docroot/WEB-INF/liferay-hook.xml" substring="&lt;language-properties&gt;content/Language*.properties&lt;/language-properties&gt;" />
								</not>
							</and>
							<then>
								<fail>@{module.name}/docroot/WEB-INF/liferay-hook.xml has an nonstandard language-properties element.</fail>
							</then>
						</if>

						<if>
							<and>
								<resourcecontains resource="@{module.name}/docroot/WEB-INF/liferay-hook.xml" substring="&lt;custom-jsp-dir&gt;" />
								<not>
									<resourcecontains resource="@{module.name}/docroot/WEB-INF/liferay-hook.xml" substring="&lt;custom-jsp-dir&gt;/META-INF/custom_jsps&lt;/custom-jsp-dir&gt;" />
								</not>
							</and>
							<then>
								<fail>@{module.name}/docroot/WEB-INF/liferay-hook.xml has a nonstandard custom-jsp-dir element.</fail>
							</then>
						</if>
					</then>
				</if>

				<if>
					<resourcecontains resource="@{module.name}/docroot/WEB-INF/web.xml" substring="Invoker Filter" />
					<then>
						<fail>@{module.name}/docroot/WEB-INF/web.xml contains generated code.</fail>
					</then>
				</if>

				<if>
					<available file="@{module.name}/ivy.xml.MD5" />
					<then>
						<fail>@{module.name}/ivy.xml.MD5 must not be checked into source control.</fail>
					</then>
				</if>

				<if>
					<available file="@{module.name}/docroot/WEB-INF/lib" />
					<then>
						<fail>@{module.name}/docroot/WEB-INF/lib must not be checked into source control.</fail>
					</then>
				</if>

				<if>
					<available file="@{module.name}/docroot/WEB-INF/tld" />
					<then>
						<fail>@{module.name}/docroot/WEB-INF/tld must not be checked into source control.</fail>
					</then>
				</if>

				<if>
					<available file="@{module.name}/lib" />
					<then>
						<fail>@{module.name}/lib must not be checked into source control.</fail>
					</then>
				</if>
			</sequential>
		</for>

		<if>
			<available file=".gitignore" />
			<then>
				<echo file=".gitignore">/*/bin
/*/classes
/*/ivy.xml.MD5
/*/javadoc
/*/lib
/*/test-classes
/*/test-results</echo>
			</then>
		</if>

		<antcall target="clean" />

		<antcall target="compile" />

		<exec dir="." executable="git" outputproperty="git.command.output">
			<arg line="status ." />
		</exec>

		<if>
			<or>
				<contains string="${git.command.output}" substring="Changes not staged for commit" />
				<contains string="${git.command.output}" substring="Untracked files" />
			</or>
			<then>
				<fail>Plugins must not generate modified files.</fail>
			</then>
		</if>

		<resourcecount property="gitignore.count">
			<fileset defaultexcludes="false" dir="." includes="**/.gitignore" />
		</resourcecount>

		<if>
			<not>
				<equals arg1="${gitignore.count}" arg2="0" />
			</not>
			<then>
				<fail>Plugins must not have custom .gitignore files.</fail>
			</then>
		</if>-->
	</target>
</project>