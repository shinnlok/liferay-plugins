<?xml version="1.0"?>

<javadocs>
	<javadoc>
		<name>ConnectionStateWebRTCMail</name>
		<type>com.liferay.chat.video.ConnectionStateWebRTCMail</type>
		<comment><![CDATA[Represents connection state WebRTC mail, providing a destination WebRTC client the state of its connection with a source WebRTC client.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>ConnectionStateWebRTCMail</name>
			<param>
				<name>connectionStateWebRTCMail</name>
				<type>com.liferay.chat.video.ConnectionStateWebRTCMail</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>ConnectionStateWebRTCMail</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>messageJSONObject</name>
				<type>com.liferay.portal.kernel.json.JSONObject</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>getMessageType</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<field>
			<name>_MESSAGE_TYPE</name>
		</field>
	</javadoc>
	<javadoc>
		<name>DescriptionWebRTCSDPMail</name>
		<type>com.liferay.chat.video.DescriptionWebRTCSDPMail</type>
		<comment><![CDATA[Represents SDP description WebRTC mail, providing a destination WebRTC client an SDP description (either a call or an answer) from a source WebRTC client.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>DescriptionWebRTCSDPMail</name>
			<param>
				<name>descriptionWebRTCSDPMail</name>
				<type>com.liferay.chat.video.DescriptionWebRTCSDPMail</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>DescriptionWebRTCSDPMail</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>messageJSONObject</name>
				<type>com.liferay.portal.kernel.json.JSONObject</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>getMessageType</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<field>
			<name>_MESSAGE_TYPE</name>
		</field>
	</javadoc>
	<javadoc>
		<name>ErrorWebRTCMail</name>
		<type>com.liferay.chat.video.ErrorWebRTCMail</type>
		<comment><![CDATA[Represents error WebRTC mail, providing a destination WebRTC client a single error from a source WebRTC client.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>ErrorWebRTCMail</name>
			<param>
				<name>errorWebRTCMail</name>
				<type>com.liferay.chat.video.ErrorWebRTCMail</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>ErrorWebRTCMail</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>messageJSONObject</name>
				<type>com.liferay.portal.kernel.json.JSONObject</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>getMessageType</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<field>
			<name>_MESSAGE_TYPE</name>
		</field>
	</javadoc>
	<javadoc>
		<name>ICECandidateWebRTCMail</name>
		<type>com.liferay.chat.video.ICECandidateWebRTCMail</type>
		<comment><![CDATA[Represents ICE candidate WebRTC mail, providing a destination WebRTC client a single ICE candidate from a source WebRTC client.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>ICECandidateWebRTCMail</name>
			<param>
				<name>iceCandidateWebRTCMail</name>
				<type>com.liferay.chat.video.ICECandidateWebRTCMail</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>ICECandidateWebRTCMail</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>messageJSONObject</name>
				<type>com.liferay.portal.kernel.json.JSONObject</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>getMessageType</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<field>
			<name>_MESSAGE_TYPE</name>
		</field>
	</javadoc>
	<javadoc>
		<name>WebRTCClient</name>
		<type>com.liferay.chat.video.WebRTCClient</type>
		<comment><![CDATA[Represents a <a href="http://en.wikipedia.org/wiki/WebRTC">Web Real-Time Communication</a> (WebRTC) client. The clients are not thread-safe.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>WebRTCClient</name>
			<param>
				<name>userId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>addWebRTCConnection</name>
			<param>
				<name>webRTCClient</name>
				<type>com.liferay.chat.video.WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>webRTCConnection</name>
				<type>WebRTCConnection</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>getOutgoingWebRTCMailbox</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getPresenceTime</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getUserId</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getWebRTCClients</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getWebRTCConnection</name>
			<param>
				<name>webRTCClient</name>
				<type>com.liferay.chat.video.WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>hasWebRTCConnection</name>
			<param>
				<name>webRTCClient</name>
				<type>com.liferay.chat.video.WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>isAvailable</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>removeBilateralWebRTCConnection</name>
			<param>
				<name>webRTCClient</name>
				<type>com.liferay.chat.video.WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>removeBilateralWebRTCConnections</name>
		</method>
		<method>
			<name>reset</name>
		</method>
		<method>
			<name>setAvailable</name>
			<param>
				<name>available</name>
				<type>boolean</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>updatePresenceTime</name>
		</method>
		<method>
			<name>removeUnilateralWebRTCConnection</name>
			<param>
				<name>webRTCClient</name>
				<type>com.liferay.chat.video.WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<field>
			<name>_available</name>
		</field>
		<field>
			<name>_outgoingWebRTCMailbox</name>
		</field>
		<field>
			<name>_presenceTime</name>
		</field>
		<field>
			<name>_userId</name>
		</field>
		<field>
			<name>_webRTCConnections</name>
		</field>
	</javadoc>
	<javadoc>
		<name>WebRTCConnection</name>
		<type>com.liferay.chat.video.WebRTCConnection</type>
		<comment><![CDATA[Represents a <a href="http://en.wikipedia.org/wiki/WebRTC">Web Real-Time Communication</a> (WebRTC) connection between two clients. It is owned by both connected clients, but still holds a reference to the original (source) caller. The connections are thread-safe.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>WebRTCConnection</name>
			<param>
				<name>sourceWebRTCClient</name>
				<type>WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>getInitiatedDurationTime</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getSourceWebRTCClient</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getState</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>setState</name>
			<param>
				<name>state</name>
				<type>com.liferay.chat.video.WebRTCConnection.State</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<field>
			<name>_initiatedTime</name>
		</field>
		<field>
			<name>_sourceWebRTCClient</name>
		</field>
		<field>
			<name>_state</name>
		</field>
	</javadoc>
	<javadoc>
		<name>WebRTCMail</name>
		<type>com.liferay.chat.video.WebRTCMail</type>
		<comment><![CDATA[Represents WebRTC mail, which is sent from a source WebRTC client to a destination WebRTC client.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>WebRTCMail</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>messageJSONObject</name>
				<type>com.liferay.portal.kernel.json.JSONObject</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>WebRTCMail</name>
			<param>
				<name>webRTCMail</name>
				<type>com.liferay.chat.video.WebRTCMail</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>getMessageJSONObject</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getMessageType</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getSourceUserId</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<field>
			<name>_messageJSONObject</name>
		</field>
		<field>
			<name>_sourceUserId</name>
		</field>
	</javadoc>
	<javadoc>
		<name>WebRTCMailbox</name>
		<type>com.liferay.chat.video.WebRTCMailbox</type>
		<comment><![CDATA[Represents a WebRTC mailbox, which can contain WebRTC mail.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>popWebRTCMails</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>pushWebRTCMail</name>
			<param>
				<name>webRTCMail</name>
				<type>WebRTCMail</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<field>
			<name>_webRTCMails</name>
		</field>
	</javadoc>
	<javadoc>
		<name>WebRTCManager</name>
		<type>com.liferay.chat.video.WebRTCManager</type>
		<comment><![CDATA[Manages <a href="http://en.wikipedia.org/wiki/WebRTC">Web Real-Time Communication</a> (WebRTC) clients by connecting them, checking and updating client connection states, and managing client mail.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>answer</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>destinationUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>answer</name>
				<type>boolean</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>call</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>destinationUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>checkWebRTCClients</name>
			<comment><![CDATA[Checks the presence of all registered WebRTC clients. This method should be called by a message listener.]]></comment>
		</method>
		<method>
			<name>checkWebRTCConnectionsStates</name>
			<comment><![CDATA[Checks the WebRTC client connection states for timeout handling. This method should be called by a message listener.]]></comment>
		</method>
		<method>
			<name>getAvailableWebRTCClientIds</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getWebRTCClient</name>
			<param>
				<name>userId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>hangUp</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>destinationUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>hasAvailableWebRTCClient</name>
			<param>
				<name>userId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>pushDescriptionWebRTCSDPMail</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>destinationUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>description</name>
				<type>java.lang.String</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>pushICECandidateWebRTCMail</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>destinationUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>candidate</name>
				<type>java.lang.String</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>removeWebRTCClient</name>
			<param>
				<name>userId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>resetWebRTCClient</name>
			<param>
				<name>userId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>updateWebRTCClientAvailability</name>
			<param>
				<name>userId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>available</name>
				<type>boolean</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>updateWebRTCClientPresence</name>
			<param>
				<name>userId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>addWebRTCClient</name>
			<param>
				<name>userId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>isValidWebRTCConnectionState</name>
			<param>
				<name>webRTCClient1</name>
				<type>WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>webRTCClient2</name>
				<type>WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>state</name>
				<type>WebRTCConnection.State</type>
				<comment><![CDATA[]]></comment>
			</param>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>pushConnectionStateWebRTCMail</name>
			<param>
				<name>sourceWebRTCClient</name>
				<type>WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>destinationWebRTCClient</name>
				<type>WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>messageJSONObject</name>
				<type>com.liferay.portal.kernel.json.JSONObject</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>pushErrorWebRTCMail</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>destinationUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>errorId</name>
				<type>java.lang.String</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>pushLostConnectionStateWebRTCMail</name>
			<param>
				<name>sourceWebRTCClient</name>
				<type>WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>destinationWebRTCClient</name>
				<type>WebRTCClient</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>reason</name>
				<type>java.lang.String</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<method>
			<name>pushWebRTCMail</name>
			<param>
				<name>sourceUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>destinationUserId</name>
				<type>long</type>
				<comment><![CDATA[]]></comment>
			</param>
			<param>
				<name>webRTCMail</name>
				<type>WebRTCMail</type>
				<comment><![CDATA[]]></comment>
			</param>
		</method>
		<field>
			<name>_CONNECTION_TIMEOUT_DURATION_TIME</name>
		</field>
		<field>
			<name>_PRESENCE_TIMEOUT_DURATION_TIME</name>
		</field>
		<field>
			<name>_webRTCClients</name>
		</field>
	</javadoc>
	<javadoc>
		<name>WebRTCManagerFactory</name>
		<type>com.liferay.chat.video.WebRTCManagerFactory</type>
		<comment><![CDATA[Creates and stores a list of WebRTC managers.]]></comment>
		<author><![CDATA[Brian Wing Shun Chan]]></author>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>createWebRTCManager</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<method>
			<name>getWebRTCManagers</name>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
		</method>
		<field>
			<name>_webRTCManagers</name>
		</field>
	</javadoc>
	<javadoc>
		<name>WebRTCConnectionStateMessageListener</name>
		<type>com.liferay.chat.video.messaging.WebRTCConnectionStateMessageListener</type>
		<comment><![CDATA[Verifies the connection states of all WebRTC managers at a regular interval.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>doReceive</name>
			<param>
				<name>message</name>
				<type>com.liferay.portal.kernel.messaging.Message</type>
				<comment><![CDATA[]]></comment>
			</param>
			<throws>
				<name>Exception</name>
				<type>java.lang.Exception</type>
				<comment><![CDATA[]]></comment>
			</throws>
		</method>
	</javadoc>
	<javadoc>
		<name>WebRTCPresenceMessageListener</name>
		<type>com.liferay.chat.video.messaging.WebRTCPresenceMessageListener</type>
		<comment><![CDATA[Verifies client presence of all WebRTC managers, at a regular interval.]]></comment>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>doReceive</name>
			<param>
				<name>message</name>
				<type>com.liferay.portal.kernel.messaging.Message</type>
				<comment><![CDATA[]]></comment>
			</param>
			<throws>
				<name>Exception</name>
				<type>java.lang.Exception</type>
				<comment><![CDATA[]]></comment>
			</throws>
		</method>
	</javadoc>
	<javadoc>
		<name>ChatVideoPollerProcessor</name>
		<type>com.liferay.chat.video.poller.ChatVideoPollerProcessor</type>
		<author><![CDATA[Philippe Proulx]]></author>
		<method>
			<name>doReceive</name>
			<param>
				<name>pollerRequest</name>
				<type>com.liferay.portal.kernel.poller.PollerRequest</type>
				<comment><![CDATA[]]></comment>
			</param>
			<return>
				<comment><![CDATA[]]></comment>
			</return>
			<throws>
				<name>Exception</name>
				<type>java.lang.Exception</type>
				<comment><![CDATA[]]></comment>
			</throws>
		</method>
		<method>
			<name>doSend</name>
			<param>
				<name>pollerRequest</name>
				<type>com.liferay.portal.kernel.poller.PollerRequest</type>
				<comment><![CDATA[]]></comment>
			</param>
			<throws>
				<name>Exception</name>
				<type>java.lang.Exception</type>
				<comment><![CDATA[]]></comment>
			</throws>
		</method>
		<field>
			<name>_webRTCManager</name>
		</field>
	</javadoc>
</javadocs>